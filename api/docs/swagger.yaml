basePath: /api/v1
definitions:
  models.Comment:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      post:
        $ref: '#/definitions/models.Post'
      post_id:
        type: integer
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
    type: object
  models.Post:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      likes:
        items:
          $ref: '#/definitions/models.User'
        type: array
      media_url:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
      views:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.User:
    properties:
      bio:
        type: string
      created_at:
        type: string
      id:
        type: integer
      profile_picture_url:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: La classe cette API
  title: CrossX API
  version: "1.0"
paths:
  /comments:
    post:
      consumes:
      - application/json
      description: Ajoute un nouveau commentaire
      parameters:
      - description: Corps du commentaire
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Comment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Comment'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erreur interne
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Création d'un commentaire
      tags:
      - comments
  /comments/{id}:
    delete:
      description: Supprime un commentaire par son ID
      parameters:
      - description: ID du commentaire
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Comment deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Comment not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erreur interne
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Suppression d'un commentaire
      tags:
      - comments
    get:
      description: Récupère un commentaire par son ID
      parameters:
      - description: ID du commentaire
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comment'
        "404":
          description: Comment not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erreur interne
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Consultation d'un commentaire
      tags:
      - comments
    put:
      consumes:
      - application/json
      description: Met à jour un commentaire existant
      parameters:
      - description: ID du commentaire
        in: path
        name: id
        required: true
        type: integer
      - description: Corps du commentaire
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comment'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Comment not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erreur interne
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Modification d'un commentaire
      tags:
      - comments
  /posts:
    post:
      consumes:
      - application/json
      description: Ajoute un nouveau post
      parameters:
      - description: Corps du post
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erreur interne
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Création d'un post
      tags:
      - posts
  /posts/{id}:
    delete:
      description: Supprime un post par son ID
      parameters:
      - description: ID du post
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Post deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Post not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erreur interne
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Suppression d'un post
      tags:
      - posts
    get:
      description: Récupère un post par son ID
      parameters:
      - description: ID du post
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "404":
          description: Post not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erreur interne
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Consultation d'un post
      tags:
      - posts
    put:
      consumes:
      - application/json
      description: Met à jour un post existant
      parameters:
      - description: ID du post
        in: path
        name: id
        required: true
        type: integer
      - description: Corps du post
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Post not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erreur interne
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Modification d'un post
      tags:
      - posts
  /posts/{id}/like:
    post:
      description: Permet de liker un post
      parameters:
      - description: ID du post
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Post liked successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Post not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erreur interne
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Like d'un post
      tags:
      - posts
  /posts/{id}/unlike:
    post:
      description: Permet de retirer un like d'un post
      parameters:
      - description: ID du post
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Post unliked successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Post not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erreur interne
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Unlike d'un post
      tags:
      - posts
  /public/health:
    get:
      description: Get API health status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check endpoint
      tags:
      - public
  /users:
    post:
      consumes:
      - application/json
      description: Permet de créer un nouvel utilisateur
      parameters:
      - description: Informations de l'utilisateur
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Création d'un utilisateur
      tags:
      - users
  /users/{id}:
    delete:
      description: Permet de supprimer un utilisateur via son ID
      parameters:
      - description: ID de l'utilisateur
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Suppression d'un utilisateur
      tags:
      - users
    get:
      description: Permet de récupérer les détails d'un utilisateur via son ID
      parameters:
      - description: ID de l'utilisateur
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Consultation d'un utilisateur
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Permet de modifier les informations d'un utilisateur existant
      parameters:
      - description: ID de l'utilisateur
        in: path
        name: id
        required: true
        type: integer
      - description: Nouvelles informations de l'utilisateur
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Modification d'un utilisateur
      tags:
      - users
swagger: "2.0"
